    pipeline{
        agent any
        parameters {
            choice(
                choices: ['parallel' , 'single'],
                description: '''Parallel -  It will deply the new build on all nginx respective bidders at a time 
                            Single - It will deploy new build on 1 nginx respective bidder at a time''',
                name: 'Deployment_Type')
            choice(
                choices: ['yes', 'no'],
                description: "Want to update the bidder host file ",
                name: 'host_update')
        }
        stages{
        stage("APPROVAL"){
            steps{
                   input "Proceed  if Approval"
                                                                
                }
            }
    stage("Take backup path"){
      steps {
        script {
          env.BIDDER_BACKUP_PATH = input message: 'Please enter the backup path ',
                             parameters: [string(defaultValue: '',
                                          description: '',
                                          name: 'ABSOLUTE PATH')]
                }
            }
        }
        stage("Checking the file path"){
            steps{
                script{
                
                    if(fileExists("${env.BIDDER_BACKUP_PATH}")){
                        
                            echo "file exist"
                            
                    }
                    
                    else{
                        echo "file dosent dosent exit"
                        error ('aborting')
                        
                    }
                   
                }

            }
                
        }
    stage('Uploading files'){


        steps{
        sh "scp -i /opt/jenkins-key/jenkins -P 7559  ${env.BIDDER_BACKUP_PATH}  jenkins@192.168.80.199:/tmp/spdp-xml-server"
        }
    } 

        
        stage('Updating list'){
        when{
            expression{params.host_update == 'yes'}
        }
            steps{
                sh ' sudo bash /opt/bidderDeployment/XML/xml_updateAll.sh '
            }
        }
        stage('Creating hostfile'){
        when{
            expression{params.host_update == 'yes'}
        }

            steps{
                sh 'ssh  -i /opt/jenkins-key/jenkins -p 7559 jenkins@192.168.80.199 "sudo bash /home2/bidder-deployment/XML/xml_create_host.sh"'
            }
        }

        stage('Deployment as  parallel'){
            when {
            
                    expression { params.Deployment_Type == 'parallel' }
                }
                parallel {
                    stage('running for admozart'){
                        steps{
                            sh 'ssh  -i /opt/jenkins-key/jenkins -p 7559 jenkins@192.168.80.199 "sudo ansible-playbook-2 -i /home2/bidder-deployment/XML/xml_hostfile --extra-vars "host=xml-nginx-admozart" /home2/bidder-deployment/XML/xml_bidder_deployment.yml "'
                        }
                    }
                    stage('running for admida'){
                        steps{
                            sh 'ssh  -i /opt/jenkins-key/jenkins -p 7559 jenkins@192.168.80.199 "sudo ansible-playbook-2 -i /home2/bidder-deployment/XML/xml_hostfile --extra-vars "host=xml-nginx-admida" /home2/bidder-deployment/XML/xml_bidder_deployment.yml "'
                        }
                    }
                    stage('running for adcanny'){
                        steps{
                            sh 'ssh  -i /opt/jenkins-key/jenkins -p 7559 jenkins@192.168.80.199 "sudo ansible-playbook-2 -i /home2/bidder-deployment/XML/xml_hostfile --extra-vars "host=xml-nginx-adcanny" /home2/bidder-deployment/XML/xml_bidder_deployment.yml "'
                        }
                    }
                }
        }
        stage('Deployment as  single'){
            when {
           
                expression { params.Deployment_Type == 'single' }
                }
            steps{
                sh 'ssh  -i /opt/jenkins-key/jenkins -p 7559 jenkins@192.168.80.199 "sudo ansible-playbook-2 -i /home2/bidder-deployment/XML/xml_hostfile --extra-vars "host=all" /home2/bidder-deployment/XML/xml_bidder_deployment.yml"'
                }
            }
        
    }
    post{
                unsuccessful{
                  mail to: 'devops@vertoz.com',
                  subject: "Status of pipeline: ${currentBuild.fullDisplayName}",
                  body: "${env.BUILD_URL} has result ${currentBuild.result}"
                }
                
                success{
                  mail to: 'devops@vertoz.com',
                  subject: "Status of pipeline: ${currentBuild.fullDisplayName}",
                  body: "${env.BUILD_URL} has result ${currentBuild.result}"
              }
        }

}